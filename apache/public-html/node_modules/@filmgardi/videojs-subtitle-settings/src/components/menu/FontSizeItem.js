import BaseMenuItem from './BaseMenuItem';

class FontSizeItem extends BaseMenuItem {
  constructor(player, options) {
    super(player, options);
    this.sizes_ = ['0.75', '1.00', '1.25', '1.50'];
    this.defaultSizes_ = null;
    this.sizeIndex = 1;
    this.addClass('vjs-menu-item-font');
  }

  increamentSizeIndex() {
    if (this.sizeIndex === (this.sizes_.length - 1)) {
      this.sizeIndex = 0;
    } else {
      this.sizeIndex++;
    }
  }

  getSize() {
    this.increamentSizeIndex();
    const size = this.sizes_[this.sizeIndex];

    return size === '1.00' ? null : Number(size);
  }

  /**
	 *
	 */
  changeFontSize() {
    if (this.player_) {
      const { textTrackSettings } = this.player_;

      if (textTrackSettings) {
        const textTrackSettingValues = textTrackSettings.getValues();

        if (!textTrackSettingValues.fontPercent) {
          textTrackSettingValues.fontPercent = this.defaultSizes_;
        }
        textTrackSettingValues.fontPercent = this.getSize();
        textTrackSettings.setValues(textTrackSettingValues);
      }
    }
  }

  /**
		* Any click on a `FontSizeItem` puts it into the selected state.
		* See {@link BaseMenuItem#handleClick} for instances where this is called.
		*
		* @param {EventTarget~Event} event
		*        The `keydown`, `tap`, or `click` event that caused this function to be
		*        called.
		*
		* @listens tap
		* @listens click
		*/
  handleClick(event) {
    this.changeFontSize();
    super.handleClick(event);
  }
}

export default FontSizeItem;
