import BaseMenuItem from './BaseMenuItem';

class BackgroundItem extends BaseMenuItem {
  constructor(player, options) {
    super(player, options);
    this.colors_ = options.colors || ['#000', '#FFF', '#F00', '#00F'];
    this.colorIndex = 0;
    this.addClass('vjs-menu-item-background');
  }

  increamentColorIndex() {
    if (this.colorIndex === (this.colors_.length - 1)) {
      this.colorIndex = 0;
    } else {
      this.colorIndex++;
    }
  }

  getColor() {
    this.increamentColorIndex();
    const color = this.colors_[this.colorIndex];

    return color;
  }

  /**
	 *
	 */
  changeColor() {
    if (this.player_) {
      const { textTrackSettings } = this.player_;

      if (textTrackSettings) {
        const textTrackSettingValues = textTrackSettings.getValues();

        if (!textTrackSettingValues.color) {
          textTrackSettingValues.color = this.colors_[0];
        }
        textTrackSettingValues.backgroundColor = this.getColor();
        textTrackSettings.setValues(textTrackSettingValues);
      }
    }
  }

  /**
		* Any click on a `BackgroundItem` puts it into the selected state.
		* See {@link BaseMenuItem#handleClick} for instances where this is called.
		*
		* @param {EventTarget~Event} event
		*        The `keydown`, `tap`, or `click` event that caused this function to be
		*        called.
		*
		* @listens tap
		* @listens click
		*/
  handleClick(event) {
    this.changeColor();
    super.handleClick(event);
  }
}

export default BackgroundItem;
