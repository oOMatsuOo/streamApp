import videojs from 'video.js';
import { toTitleCase } from '../utils/string-cases';
import ColorItem from './menu/ColorItem';
import FontSizeItem from './menu/FontSizeItem';
import BackgroundItem from './menu/BackgroundItem';
import BackItem from './menu/BackItem';

// Concrete classes
const MenuItem = videojs.getComponent('MenuItem');
const Component = videojs.getComponent('Component');
const Dom = videojs.dom;

class SubtitleSettingMenu {
  /**
	 *
	 * @param {Player} player - vjs player
	 * @param {Object} options - Item object
	 * @param {*} parentEl
	 */
  constructor(player, options, parentEl) {
    // super(player, options);
    this.player = player;
    this.options = options;
    this.parent = parentEl;
    this.menu = {};
  }

  createMenu() {
    const player = this.player;
    const menuEl = Dom.createEl('div', {
      className: 'vjs-menu vjs-menu-subtitle-setting',
      tabIndex: -1
    });
    const menuContentEl = Dom.createEl('ul', {
      className: 'vjs-menu-content ',
      tabIndex: -1
    });

    this.menu = new Component(player, { el: menuEl });
    const menuContent = new Component(player, { el: menuContentEl });
    const menuItemTitle = new MenuItem(player, { label: player.localize(toTitleCase('Setting')), selectable: false });
    const colorMenuItem = new ColorItem(player, { label: player.localize(toTitleCase('TextColor')), selectable: false });
    const fontSizeMenuItem = new FontSizeItem(player, { label: player.localize(toTitleCase('FontSize')), selectable: false });
    const backgroundMenuItem = new BackgroundItem(player, { label: player.localize(toTitleCase('BackgroundColor')), selectable: false });
    const backMenuItem = new BackItem(player, { label: player.localize(toTitleCase('Back')), selectable: false }, this);

    menuContent.addChild(menuItemTitle);
    menuContent.addChild(colorMenuItem);
    menuContent.addChild(fontSizeMenuItem);
    menuContent.addChild(backgroundMenuItem);
    menuContent.addChild(backMenuItem);
    this.menu.addChild(menuContent);

    if (this.parent) {
      this.parent.addChild(this.menu);
    }
  }

  hide() {
    if (this.menu) {
      this.menu.unlockShowing();
    }
  }
  show() {
    if (this.menu) {
      this.menu.lockShowing();
    }
  }

}

export default SubtitleSettingMenu;
