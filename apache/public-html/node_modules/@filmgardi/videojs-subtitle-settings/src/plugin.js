import videojs from 'video.js';
import { version as VERSION } from '../package.json';
import SubtitleSettingButton from './components/SubtitleSettingButton';

const Plugin = videojs.getPlugin('plugin');

// Default options for the plugin.
const defaults = {};

/**
 * An advanced Video.js plugin. For more information on the API
 *
 * See: https://blog.videojs.com/feature-spotlight-advanced-plugins/
 */
class SubtitleSettings extends Plugin {

  /**
   * Create a Settings plugin instance.
   *
   * @param  {Player} player
   *         A Video.js Player instance.
   *
   * @param  {Object} [options]
   *         An optional options object.
   *
   *         While not a core part of the Video.js plugin architecture, a
   *         second argument of options is a convenient way to accept inputs
   *         from your plugin's caller.
   */
  constructor(player, options) {
    // the parent class will add player under this.player
    super(player);
    this.options = videojs.mergeOptions(defaults, options);

    this.player.ready(() => {
      this.player.addClass('vjs-subtitle-settings');
      this.createSettingButton();
    });
  }

  /**
   * Adds the setting menu button to the player control bar.
   *
   */
  createSettingButton() {
    const player = this.player;

    this.settingButton = new SubtitleSettingButton(player);

    const placementIndex = player.controlBar.children().length - 3;

    const settingButtonInstance = player.controlBar.addChild(
      this.settingButton,
      { componentClass: 'subtitleSettingMenu' },
      this.options.placementIndex || placementIndex
    );

    settingButtonInstance.addClass('vjs-subtitle-setting-menu');

    this.setButtonInnerText('subtitle setting');
    settingButtonInstance.removeClass('vjs-hidden');
  }

  /**
   *Set inner button text.
   *
   * @param {string} text - the text to display in the button.
   */
  setButtonInnerText(text) {
    this.settingButton
      .menuButton_.$('.vjs-control-text').innerHTML = text;
  }

}

// Define default values for the plugin's `state` object here.
SubtitleSettings.defaultState = {};

// Include the version number.
SubtitleSettings.VERSION = VERSION;

// Register the plugin with video.js.
videojs.registerPlugin('subtitleSettings', SubtitleSettings);

export default SubtitleSettings;
